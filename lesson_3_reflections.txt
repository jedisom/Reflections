When would you want to use a remote repository rather than keeping all your work local?
  You would want to use a remote repository if you want to share your work with other 
  people.  It would also be a great way to work if you are creating code on several
  different devices; the information could be shared and transferred via Git Hub.
  
Why might you want to always pull changes manually rather than having Git automatically 
stay up-to-date with your remote repository?
	I'm not sure.  One thought is that you might have different versions/branches on 
	GitHub that you don't want to work with on your local computer.
	
Describe the differences between forks, clones, and branches. When would you use one 
instead of another?
	branches are different revision paths repositories that may have different programming
	or content for experimentation, etc.  Fork are like branches, but are done on GitHub 
	and allow you to copy someone elses repository and build off of it without affecting 
	their repository.  Cloning is the process of copying what is in a repository into 
	another repository.  Cloning can be done from GitHub to your computer, or within your
	local computer.

What is the benefit of having a copy of the last known state of the remote stored locally?
	Having the last known state of the remote stored locally allows you to work off of the
	most recent changes on your computer without being connected to the internet.  It also
	is a check to make sure you haven't missed any changes potentially put into the repository
	by any of your other collaborators.

How would you collaborate without using Git or GitHub? What would be easier, and what would 
be harder?
	I would collaborate by creating a common repository for people to work on a given project.
	We would need a "gate keeper" that would review pull requests as quality control.  It
	would make keeping track of the changes, who made them, what they were, etc. easier.  This
	method would likely take some getting used to if the people working on the project were
	not familiar with git and github.  It also takes a little extra time to add, commit, push, 
	etc., but it would save time in the long run by avoiding mistakes and overwriting files...
	
When would you want to make changes in a separate branch rather than directly in master? 
What benefits does each approach have?
	You want to make changes in a different branch rather than directly in master if you are
	unsure if the change will work out (bugs, acceptance from the group, etc.)  Working directly
	on master is definitely quicker and easier to do.  Creating a branch keeps options open and
	maintains a clean working version of master while trying to develop new features.


